<Application x:Class="ImprovingU.Reactive.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=PresentationFramework"
             xmlns:reactiveUi="clr-namespace:ReactiveUI;assembly=ReactiveUI"
             xmlns:ui="clr-namespace:ImprovingU.Reactive.UI"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             xmlns:st="http://schemas.spicytaco.io/"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        
        <!-- Modal overlay and shadow definitions -->
        <Color x:Key="ModalOverlayColor">#1B1F26</Color>
        <SolidColorBrush x:Key="DarkBackgroundBrush" Color="{StaticResource ModalOverlayColor}" Opacity="0.75"/>
        <SolidColorBrush x:Key="ModalOverlayBackgroundBrush" Color="{StaticResource ModalOverlayColor}" Opacity="0.75"/>
        <DropShadowEffect x:Key="ModalShadow" BlurRadius="35" ShadowDepth="8" Direction="270" Color="{StaticResource ModalOverlayColor}" Opacity="0.6" />

        <FontFamily x:Key="FontFamily">Arial</FontFamily>
        <sys:Double x:Key="DefaultFontSize">14</sys:Double>
        <SolidColorBrush x:Key="MutedForeground" Color="SlateGray"/>
        <SolidColorBrush x:Key="ErrorForeground" Color="#FFE74C3C"/>
        
        <Thickness x:Key="Spacing">5</Thickness>
        <Thickness x:Key="SpacingTight">2.5</Thickness>
        <Thickness x:Key="SpacingTightVertically">5,2.5</Thickness>
        <Thickness x:Key="SpacingTightHorizontally">2.5,5</Thickness>

        <!-- Validation error styles -->
        <ControlTemplate x:Key="ErrorTemplate">
            <DockPanel LastChildFill="True">
                <Grid DockPanel.Dock="Right" Width="16" Height="16" VerticalAlignment="Center" Margin="-22 0 0 0">
                    <fa:ImageAwesome Icon="TimesCircleOutline" Foreground="{StaticResource ErrorForeground}"
                                     IsHitTestVisible="False" Focusable="False"/>
                </Grid>
                <Border BorderBrush="{StaticResource ErrorForeground}" BorderThickness="1" Margin="-1">
                    <Grid>
                        <Border Background="{StaticResource ErrorForeground}" IsHitTestVisible="False" Opacity="0.2"/>
                        <AdornedElementPlaceholder Name="controlWithError"/>
                    </Grid>
                </Border>
            </DockPanel>
        </ControlTemplate>

        <Style TargetType="Window">
            <Setter Property="TextOptions.TextHintingMode" Value="Auto"/>
            <Setter Property="TextOptions.TextFormattingMode" Value="Ideal"/>
            <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
        </Style>

        <Style x:Key="TextBase" TargetType="TextBlock">
            <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
            <Setter Property="FontFamily" Value="{StaticResource FontFamily}"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="TextTrimming" Value="WordEllipsis"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="TextOptions.TextHintingMode" Value="Auto"/>
            <Setter Property="TextOptions.TextFormattingMode" Value="Ideal"/>
            <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
        </Style>

        <Style x:Key="Title" TargetType="TextBlock" BasedOn="{StaticResource TextBase}">
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Focusable" Value="False"/>
        </Style>

        <Style x:Key="SubHeading" TargetType="TextBlock" BasedOn="{StaticResource TextBase}">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Focusable" Value="False"/>
        </Style>

        <Style x:Key="Muted" TargetType="TextBlock" BasedOn="{StaticResource TextBase}">
            <Setter Property="Foreground" Value="{StaticResource MutedForeground}"/>
        </Style>

        <Style x:Key="MutedSubHeading" TargetType="TextBlock" BasedOn="{StaticResource SubHeading}">
            <Setter Property="Foreground" Value="{StaticResource MutedForeground}"/>
        </Style>

        <Style TargetType="TextBlock" BasedOn="{StaticResource TextBase}"/>

        <Style TargetType="Button">
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
            <Setter Property="TextElement.FontSize" Value="{StaticResource DefaultFontSize}"/>
            <Setter Property="TextBlock.FontSize" Value="{StaticResource DefaultFontSize}"/>
            <Setter Property="Width" Value="75"/>
        </Style>

        <Style TargetType="TextBox">
            <Setter Property="Padding" Value="5,4"/>
            <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
            <Setter Property="FontFamily" Value="{StaticResource FontFamily}"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ErrorTemplate}"/>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="ui:SecurePasswordBox">
            <Setter Property="Padding" Value="5,4"/>
            <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
            <Setter Property="FontFamily" Value="{StaticResource FontFamily}"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ErrorTemplate}"/>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="CheckBox">
            <Setter Property="Foreground" Value="{StaticResource MutedForeground}"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>

        <!-- ReactiveUI's ViewModelViewHost -->
        <Style TargetType="reactiveUi:ViewModelViewHost">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        </Style>
        
        <Style TargetType="{x:Type ui:ValidationMessage}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ui:ValidationMessage}">
                        <TextBlock Visibility="Collapsed" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="InlineValidationMessage" TargetType="{x:Type ui:ValidationMessage}">
            <Setter Property="Padding" Value="2,0,2,4" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ui:ValidationMessage}">
                        <st:AutoGrid x:Name="grid" Columns="Auto,Auto" Rows="Auto" Visibility="Collapsed" 
                                     Margin="{TemplateBinding Padding}" ToolTip="{TemplateBinding Text}">
                            <fa:ImageAwesome x:Name="icon" Icon="{TemplateBinding Icon}"
                                             Width="16" Height="16" Foreground="{TemplateBinding Fill}"
                                             Visibility="{TemplateBinding ShowError, Converter={ui:BooleanToVisibilityConverter}}"/>

                            <TextBlock Text="{TemplateBinding Text}" Margin="3,0,0,2" VerticalAlignment="Center"/>
                        </st:AutoGrid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsShowingMessage" Value="True">
                                <Setter Property="Visibility" Value="Visible" TargetName="grid" />
                            </Trigger>

                            <Trigger Property="IsShowingMessage" Value="False">
                                <Setter Property="Visibility" Value="Collapsed" TargetName="grid" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Styles to set the design time background -->
        <!-- Transparent backgrounds are a problem in the dark VS designer -->
        <Style TargetType="{x:Type UserControl}">
            <Style.Triggers>
                <Trigger Property="componentModel:DesignerProperties.IsInDesignMode" Value="true">
                    <Setter Property="Background" Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>

    </Application.Resources>
</Application>
